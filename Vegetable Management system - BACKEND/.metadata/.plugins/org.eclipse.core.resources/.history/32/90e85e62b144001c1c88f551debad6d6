package com.hexaware.vegetablemanagement.controller;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.hexaware.vegetablemanagement.entity.*;
import com.hexaware.vegetablemanagement.repository.OrderRepository;
import com.hexaware.vegetablemanagement.repository.VendorVegRepo;
import com.hexaware.vegetablemanagement.service.CustomerService;
import com.hexaware.vegetablemanagement.service.OrderService;
import com.hexaware.vegetablemanagement.service.VegetableService;
import com.hexaware.vegetablemanagement.service.VendorService;
import com.hexaware.vegetablemanagement.service.VendorVegService;

@RestController
public class AdminController {
	@Autowired
	private CustomerService custService;
	@Autowired
	private OrderRepository ordRepo;
	@Autowired
	private OrderService ordService;
	
	@Autowired
	private VendorVegRepo venvegrep;
	
	@Autowired
	private VendorVegService venvegserv;
	
	@Autowired
	private VendorService venserv;
	
	@Autowired
	private VegetableService vegserv;

	
	@RequestMapping("/hello")
	List<Customer> getAll() {
		return custService.findAll();
	}
	@RequestMapping("/veg")
	List<Vegetable> getAllVeg() {
		return vegserv.findAll();
	}
	@RequestMapping("/customers")
	Customer getCustomerDetails(@RequestParam(value = "id")  int custId) {
		return custService.findById(custId).get();
	}
	@RequestMapping("/submit")
	List<VendorVeg> AddCusyt() {
		custService.save(new Customer(1, "Madara", "Maddy", "98398", "maddy@gmail", "44/2"));
		venserv.save(new Vendor(1, "a", "a", "a", "a"));
		vegserv.save(new Vegetable(1, "a", "12"));
		venvegrep.save(new VendorVeg(1, vegserv.findById((long)1).get(), venserv.findById((long)1).get()));
		
		return venvegrep.findByVendor(venserv.findById((long)1).get());
		
	}
	
	@PostMapping(value="/custloginauth")
	Map<String, String>  custLoginAuth(@RequestBody Customer cust) {
		HashMap<String, String> res = new HashMap<>();
		try {
		System.out.println(cust.getPassword()+"hdello");
			long custId = cust.getId();
		Customer currCust = custService.findById(custId).get();
		if(currCust.getPassword().equals(cust.getPassword())) {
			res.put("login", "true");
		    return res;
		    }

		else {
			res.put("login", "false");
		    return res;
		}
		}
		catch(Exception e) {
			e.printStackTrace();
			res.put("login", "false");
		    return res;

		}
	}
	
	@RequestMapping(value= "/orders")
	Optional<Order> getOrders(){
		//System.out.println(custService.findById(1).get());
		long order_id = ordRepo.findByCustomer(custService.findById((long) 1).get()).get(0).getId();
		return ordService.findById(order_id);
		
	}
	
	
}
